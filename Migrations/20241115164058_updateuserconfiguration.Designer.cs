// <auto-generated />
using System;
using Atm_sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Atm_sql.Migrations
{
    [DbContext(typeof(ApplicationDbcontext))]
    [Migration("20241115164058_updateuserconfiguration")]
    partial class updateuserconfiguration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TransactionInfo", b =>
                {
                    b.Property<int>("OperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperationId"), 1L, 1);

                    b.Property<double>("OperationAmount")
                        .HasColumnType("float");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("balanceafter")
                        .HasColumnType("float");

                    b.Property<double>("balancebefore")
                        .HasColumnType("float");

                    b.Property<bool>("iscomplete")
                        .HasColumnType("bit");

                    b.Property<string>("operation_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("operationdatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("reciever_Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sender_Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperationId");

                    b.HasIndex("UserId");

                    b.ToTable("transactionInfos");
                });

            modelBuilder.Entity("users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("sqlserver:identity", "1,1");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<double>("balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("max_count")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TransactionInfo", b =>
                {
                    b.HasOne("users", "users")
                        .WithMany("transactionInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("users", b =>
                {
                    b.Navigation("transactionInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
